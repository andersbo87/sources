Oppgave 1:

int a = 16;
int b = 83;
int c = 92;
int d = 12;
print("Sum: " + (a*d) + (b*c) + "/" + b*d+"\n");
print("Produkt: " + a*c + "/" + b*d + "\n");
print("Divisjon: " + a*d + "/" + b*c + "\n");

Oppgave 2:

Den tredje (manglende) dimmensjonen her er dybden.
int volum = 250;
int hoyde = 5;
int bredde = 5;
int dybde = volum/hoyde*bredde;
Program kommer senere.

Oppgave 3:

int husnr = 2;
int etasjer = 6;
int leiligheter = 6;
int vinduer = 6;
println("Vinduer i hver etasje: " + vinduer*leiligheter);
println("Vinduer i hvert bygg: " + vinuder*leiligheter*etasjer);
println("Vinduer til sammen: " + vinduer*leiligheter*etasjer*husnr);

Oppgave 4:

int antEgg = 447;
println("Antall esker med 12 egg: " + antEgg / 12);
println("Antall esker med 6 egg : " + antEgg / 6);
println("Antall esker med 24 egg: " + antEgg / 24);

Oppgave 5:

/*
La oss konvertere alt til én enhet, i dette tilfellet cm:
3 cm = 3 cm
0.2 dm = 2 cm
0.055 m = 5.5 cm
*/
float b = 3, l=2, h=5.5;
float vol = b*l*h;
Volumet er da på 6*5,5 = 33 cm^3.

Oppgave 6:

Denne hopper jeg forelpig over.

Oppgave 7:

int diagonal = 10;
int side = 8;
float hoyde = diagonal*diagonal-side*side;

Kodesnutten under tegner hele rektangelet med diagonalen:

float diagonal, side, hoydeKvadrat, hoyde;
void setup()
{
  size(200,200);
  diagonal = 10;
  side = 8;
  hoydeKvadrat = diagonal*diagonal-side*side;
  hoyde = sqrt((int)hoydeKvadrat);
  println("Høyde: " + hoyde + " cm");
  // Arealet i dm:
  float arealDm = (side/10)*(hoyde/10);
  float arealm = (side/100)*(hoyde/100);
  println("Areal: " + nfs(arealDm,1,3) + " dm\nAreal: " + nfs(arealm,1,4) + " m");
  frameRate(1);
}
void draw()
{
  translate(1,1);
  scale(20,20);
  background(255);
  strokeWeight(1/10);
  drawTriangle();
}

void drawTriangle()
{
  rect(0,0,side,hoyde);
  triangle(0,0,0,hoyde, side, 0);
}

Oppgave 8:

Basert/hentet fra fasiten (hadde ikke sjangs til å klare dette selv)

void setup()
{
	size(596,843);
	framerate(1);
}

void draw()
{
	makeA4();
	translate(1,1);
	drawFlag(15);
	translate(0,15);
	drawFlag(5);
	translate(10,0);
	drawFlag(5);
}

void makeA4()
{
	float sfactor = 28.4;
	scale(sfactor,sfactor);
	strokeWeight(1/sfactor);
	background(255);
}

void drawFlag(float l)
{
	float unit = l/22;
	float h = unit * 16; // hvorfor 16?
	
	/*
	De røde delene i flagget vårt:
	*/
	fill(255,0,0);
	stroke(0);
	rect(0,0,l,h);
	
	/*
	Den hvite, ytre delen av korset
	*/
	fill(255);
	stroke(255);
	rect(0,6*unit,l,4*unit);
	rect(6*unit,0,4*unit,16*unit);

	/*
	Den blå, indre delen av korset
	*/
	fill(0,0,255);
	stroke(0,0,255);
	rect(0,7*unit,l,2*unit);
	rect(7*unit,0,2*unit,16*unit);

	/*Kanten på flagget*/
	noFill();
	stroke(0);
	rect(0,0,l,h);
}

Oppgave 9:

Også rett fra fasit:

void lagA4(){
  // punkter pr cm
  float sfactor=28.4; 
  // tenk og skriv i cm, origo oppe til venstre
  // og y-aksen nedover
  scale(sfactor,sfactor);
  // behold en tynn strek
  strokeWeight(1/sfactor);
  // hvit bakgrunn
  background(255);
}

// når programmet satrter
void setup(){
  // tilnærmet A4
  size(596, 843);
  // hvert sekund siden vi ikke har noen animasjon
  frameRate(1);
}

// konverteringer
float m_to_cm = (float)Math.pow(10, 2);
float dm_to_cm = (float)Math.pow(10, 1);


// beregn og tegn
void draw(){
  lagA4();
  // plasser origo innen for margen
  translate(1,1);
  DrawFigures();
}
void DrawFigures(){
  float y = 5;
  
  // Figur A
  float area_figure_a = 0.175 * m_to_cm;
  float side_a = (area_figure_a * 2) / y;
  translate(3, 3);
  triangle(0, 0, 0, side_a, y, side_a);
  
  
  // Figur B og C
  float perimeter_c = 22;
  float side_c = (perimeter_c - 2*y) / 2; // 2·X
  float side_b = side_c /2; // X
  
  translate(0, side_a);
  rect(0,0, y, side_b);
  translate(0, side_b);
  rect(0,0, y, side_c);
  
  
  // Figur D
  float hypotenuse_d = sqrt(41);
  float side_d = sqrt((float)Math.pow(hypotenuse_d, 2) - (float)Math.pow(y, 2));
  translate(0, side_c);
  triangle(0, 0, y, side_d, y, 0);
  
  
  // Figur E
  float side_e_1 = side_d / 2;
  float area_e = 0.8 * dm_to_cm;
  float side_e_2 = (area_e * 2) / side_d;
  translate(y, 0);
  rect(0, 0, side_e_2, side_e_1);
  rect(side_e_2, 0, side_e_2, side_e_1);
  rect(0, side_e_1, side_e_2, side_e_1);
  rect(side_e_2, side_e_1, side_e_2, side_e_1);
  
  
  // Figur G
  float side_g = 4;
  translate(side_e_2 * 2, 0);
  triangle(0, 0, side_e_1 * 2, 0, 0, side_g);

}

LØSNINGENE PÅ OPPGAVENE UNDER ER HENTET RETT FRA FASITEN.

Oppgave 10

void draw()
{
	makeA4();
	translate(1,1);
	drawBox(5); // 5 cm
}

void setup()
{
	size(596,843);
	frameRate(1);
}

void makeA4()
{
	float sfactor = 28.4;
	scale(sfactor,sfactor);
	strokeWeight(1/sfactor);
	background(255);
}

void drawBox(float side) // side i cm
{
	translate(side,0);
	rect(0,0,side,side);
	translate(0,side);
	rect(0,0,side,side);
	translate(0,side);
	rect(0,0,side,side);
	translate(0,side);
	rect(0,0,side,side);
	translate(-side,-2*side);
	rect(0,0,side,side);
	translate(2*side,0);
	rect(0,0,side,side);
}

Oppgave 11

void draw()
{
	makeA4();
	drawPyramide(5,5);
}

void setup()
{
	size(596,843);
	frameRate(1);
}

void makeA4()
{
	float sfactor = 28.4;
	scale(sfactor,sfactor);
	strokeWeight(1/sfactor);
	background(255);
}

void drawPyramide(float ps, float ph)
{
	float pth = sqrt((ps/2)*(ps/2)+ph*ph);
	translate(pth+ps/2,pth+ps/2);
	rect(-ps/2,-ps/2,ps,ps);
	triangle(-ps/2, -ps/2, -pth-ps/2, 0, -ps/2, ps/2); //venstre
	triangle(ps/2, -ps/2, pth+ps/2, 0, ps/2, ps/2); //høyre
	triangle(-ps/2, -ps/2, 0, -ps/2-pth, ps/2, -ps/2); //oppe
	triangle(-ps/2, ps/2, 0, ps/2+pth, ps/2, ps/2); // nede
}

Oppgave 12

void draw()
{
	makeA4();
	translate(1,1);
	drawCylinder(5,10); // diameter på 5 cm, høyde på 10 cm
}

void setup()
{
	size(596,843);
	frameRate(1);
}

void makeA4()
{
	float sfactor = 28.4;
	scale(sfactor,sfactor);
	strokeWeight(1/sfactor);
	background(255);
}

void drawCylinder(float d, float h)
{
	float r = d/2; // r = radius
	float w = d*PI; // w = witdth = bredde
	translate(w/2, r);
	ellipse(0, 0, d, d);
	translate(0, r);	
	rect(-w/2, 0, w, h);
	translate(0, h+r);
	ellipse(0, 0, d, d);
}
